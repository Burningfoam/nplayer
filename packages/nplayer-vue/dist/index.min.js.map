{"version":3,"sources":["webpack://NPlayerVue/webpack/universalModuleDefinition","webpack://NPlayerVue/webpack/bootstrap","webpack://NPlayerVue/./packages/nplayer-vue/src/index.ts"],"names":["root","factory","exports","module","define","amd","this","plugin","install","app","opts","NPlayer","Player","window","Error","NPlayerVue","name","props","options","Object","data","player","methods","dispose","mounted","mount","$refs","element","beforeDestroy","beforeUnmount","render","h","style","width","height","ref","component"],"mappings":"CAAA,SAA2CA,EAAMC,GAC1B,iBAAZC,SAA0C,iBAAXC,OACxCA,OAAOD,QAAUD,IACQ,mBAAXG,QAAyBA,OAAOC,IAC9CD,OAAO,aAAc,GAAIH,GACC,iBAAZC,QACdA,QAAoB,WAAID,IAExBD,EAAiB,WAAIC,IARvB,CASGK,MAAM,WACT,O,wBCTA,I,KCMMC,EAAS,CAEbC,QAFa,SAELC,GAAsC,MAA5BC,EAA4B,uDAAF,GACpCC,EAAyBD,EAAKE,SAAL,UAAiBC,OAAeF,eAAhC,aAAiB,EAAwBC,QACxE,IAAKD,EAAS,MAAM,IAAIG,MAAM,oCAE9B,IAAMC,EAAa,CACjBC,KAAMN,EAAKM,MAAQ,UACnBC,MAAO,CACLC,QAASC,QAEXC,KALiB,WAMf,MAAO,CACLC,OAAQ,OAGZC,QAAS,CACPC,QADO,WAEJjB,KAAae,OAAOE,YAGzBC,QAfiB,WAgBVlB,KAAKe,SACRf,KAAKe,OAAS,IAAIV,EAAQL,KAAKY,SAC/BZ,KAAKe,OAAOI,MAAMnB,KAAKoB,MAAMC,WAGjCC,cArBiB,WAqBCtB,KAAKiB,WACvBM,cAtBiB,WAsBCvB,KAAKiB,WACvBO,OAvBiB,SAuBVC,GACL,OAAOA,EAAE,MAAO,CAAEC,MAAO,CAAEC,MAAO,OAAQC,OAAQ,QAAUC,IAAK,cAIrE1B,EAAI2B,UAAUrB,EAAWC,KAAMD,K,OAInC,Y","file":"index.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"NPlayerVue\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"NPlayerVue\"] = factory();\n\telse\n\t\troot[\"NPlayerVue\"] = factory();\n})(this, function() {\nreturn ","// The require scope\nvar __webpack_require__ = {};\n\n","import type { Player } from 'nplayer';\n\nexport interface NPlayerVueOptions {\n  Player?: typeof Player,\n  name?: string;\n}\n\nconst plugin = {\n\n  install(app: any, opts: NPlayerVueOptions = {}) {\n    const NPlayer: typeof Player = opts.Player || ((window as any).NPlayer?.Player);\n    if (!NPlayer) throw new Error('[NPlayer] required Player option');\n\n    const NPlayerVue = {\n      name: opts.name || 'NPlayer',\n      props: {\n        options: Object,\n      },\n      data() {\n        return {\n          player: null,\n        };\n      },\n      methods: {\n        dispose() {\n          (this as any).player.dispose();\n        },\n      },\n      mounted() {\n        if (!this.player) {\n          this.player = new NPlayer(this.options);\n          this.player.mount(this.$refs.element);\n        }\n      },\n      beforeDestroy() { this.dispose(); },\n      beforeUnmount() { this.dispose(); },\n      render(h: any) {\n        return h('div', { style: { width: '100%', height: '100%' }, ref: 'element' });\n      },\n    } as any;\n\n    app.component(NPlayerVue.name, NPlayerVue);\n  },\n};\n\nexport default plugin;\n\nexport { plugin as Plugin };\n"],"sourceRoot":""}